# Copyright (C) 2022 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: Build bedtools-ng

# Events that trigger workflow
on:
  push:
    branches: [ main, solutions-008 ]
    # Only files matching the following glob expressions will trigger the workflow
    # (e.g. changes to the README will not trigger the workflow)
    paths:
      - "bedtools_ng/**"
      - "data/**"
      - ".github/workflows/build-bedtools-ng.yml"
      - ".gitignore"
      - ".pyproject.yaml"
      - "setup.*"

  pull_request:
    branches: [ main, solutions-008 ]
    paths:
      - "bedtools_ng/**"
      - "data/**"
      - ".github/workflows/build-bedtools-ng.yml"
      - ".gitignore"
      - ".pyproject.yaml"
      - "setup.*"

# Define jobs
jobs:
  # Name first job
  build-bedtools-ng:
    # OS is picked based on job matrix
    runs-on: ${{ matrix.os }}

    # Define a job matrix
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - macos-10.15
          - macos-11
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'

    # Define one of more steps
    steps:
      # Use an action to checkout the current repository
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Check Python version
        run: python3 --version

      # Dependencies need to be installed in different ways on Ubuntu and macOS
      - name: Install build dependencies - Ubuntu
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install -y git                \
                                  python3            \
                                  python3-pip        \
                                  python3-venv       \
                                  python3-setuptools

      - name: Install build dependencies - macOS
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          brew install git \
                       python3
          python3 -m pip install --upgrade setuptools
          python3 -m pip install --upgrade pip

      # This will cache the venv to avoid needlessly re-installing the same packages over and over
      # The cache key changes when any of the setup files change
      # Notice that we are labelling this step with an ID. This allows us to refer to the output of this
      # step later on
      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: venv
          # Notice how each OS gets its own cache!
          key: venv-cache-${{ matrix.os }}-${{ matrix.python-version}}-${{ hashFiles('setup.cfg', 'setup.py', 'pyproject.toml') }}

      # Create a new venv only if there wasn't a cache hit
      - name: Create venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: python3 -m venv ./venv

      - name: Install bedtools-ng
        run: venv/bin/pip install '.[all]'

      - name: Run unit tests
        run: venv/bin/pytest .

      - name: Run bedtools-ng
        run: |
          venv/bin/bedtools-ng --help
          venv/bin/bedtools-ng --version
          
          venv/bin/bedtools-ng count-overlaps  \
                               data/chroms.bed \
                               data/grch38_transcripts.bed
